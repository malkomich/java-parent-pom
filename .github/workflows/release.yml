name: Release

on:
  push:
    branches:
      - staging

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set up Java for publishing a release to Maven Central Repository
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Configuring Maven cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Configure GPG Key
        run: printf "${GPG_PRIVATE_KEY}" | base64 --decode | gpg --batch --import
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Configure Git
        run: |
          git config committer.email "noreply@github.com"
          git config committer.name "Github"
          git config author.email "noreply@github.com"
          git config author.name "Github"

      - name: Update SCM tag reference
        run: |
          mvn versions:set-scm-tag -DnewTag=${GITHUB_REF}
          mvn versions:commit

      - name: Prepare for release
        run: |
          mvn -B -ntp \
            -Dusername=$GITHUB_ACTOR \
            -Dpassword=$GITHUB_TOKEN \
            release:prepare

      - name: Publish to the Maven Central Repository
        run: |
          mvn -ntp \
            -Darguments="-B -Dgpg.passphrase=$GPG_PASSPHRASE -Dmaven.gpg.plugin.skip=false" \
            release:perform
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
